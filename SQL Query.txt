create database temp1;

create database temp2;

create database college;

create database IF NOT EXISTS college;

drop database temp1;
 
drop database temp2;

DROP DATABASE IF EXISTS company;

use college;

create table student(id INT PRIMARY KEY,name VARCHAR(50),age INT NOT NULL);

INSERT INTO student VALUES(1,"karan",26);
INSERT INTO student VALUES(2,"Vishal",27);
INSERT INTO student VALUES(3,"Ashwini",28);

SELECT *FROM student;

SHOW DATABASES;

SHOW TABLES;

DROP TABLE student;

CREATE TABLE student(rollno INT PRIMARY KEY,name VARCHAR(50));

SELECT *FROM student;

INSERT INTO student(rollno,name) VALUES(101,"karan");
INSERT INTO student(rollno,name) VALUES(102,"Arjun");
INSERT INTO student(rollno,name) VALUES(103,"Ashwini");
INSERT INTO student VALUES(104,"Sham");

CREATE DATABASE xyz_company;

USE xyz_company;

CREATE TABLE employee(
id INT PRIMARY KEY,
name VARCHAR(100),
salary INT);

INSERT INTO employee(id,name,salary) VALUES(1,"adam",25000),(2,"Hob",30000),(3,"casey",40000);

SELECT *FROM employee;

CREATE TABLE temp1(id INT UNIQUE);

CREATE TABLE temp1(id INT,name VARCHAR(50),age INT,city VARCHAR(20),PRIMARY KEY(id,name));

INSERT INTO temp1 VALUES(101);

SELECT *FROM temp1;

CREATE TABLE emp(id INT,salary INT DEFAULT 25000);

INSERT INTO emp(id) VALUES(101);

SELECT *FROM emp;

CREATE DATABASE colleges;

USE colleges;

CREATE TABLE student(
rollno INT PRIMARY KEY,
name VARCHAR(50),
marks INT NOT NULL,
grade VARCHAR(1),
city VARCHAR(20));

INSERT INTO student(rollno,name,marks,grade,city)VALUES(101,"karan",78,"C","pune");
INSERT INTO student(rollno,name,marks,grade,city)VALUES(102,"Vishal",79,"B","Nagpur");
INSERT INTO student(rollno,name,marks,grade,city)VALUES(103,"Ashwini",80,"A","Nashik");
INSERT INTO student(rollno,name,marks,grade,city)VALUES(104,"Abhinav",85,"B","Karmala");
INSERT INTO student(rollno,name,marks,grade,city)VALUES(105,"Vaishali",92,"A","Malegoan");
INSERT INTO student(rollno,name,marks,grade,city)VALUES(106,"Saurab",50,"F","Baramati");
INSERT INTO student(rollno,name,marks,grade,city)VALUES(107,"Pranjali",51,"G","Baramati");


SELECT *FROM student;

SELECT name,marks FROM student;

SELECT DISTINCT city FROM student;

SELECT *FROM student WHERE marks>80;

SELECT *FROM student WHERE city="Baramati";

SELECT *FROM student WHERE marks>40 AND city="Baramati";

SELECT *FROM student WHERE marks+10>100;

SELECT *FROM student WHERE marks=50;

SELECT *FROM student WHERE marks>50;

SELECT *FROM student WHERE marks>=80 AND city="Nashik";

SELECT *FROM student WHERE marks>80 OR city="Nashik";

SELECT *FROM student WHERE marks BETWEEN 80 AND 90;

SELECT *FROM student WHERE city IN("pune","Karmala");

SELECT *FROM student WHERE city IN("Sakharwadi","Pimpalwadi");

SELECT *FROM student WHERE city NOT IN("Karmala","pune");

SELECT *FROM student LIMIT 3;

SELECT *FROM student WHERE marks >70 LIMIT 3;

SELECT *FROM student ORDER BY marks ASC;

SELECT *FROM student ORDER BY marks DESC;

SELECT *FROM student ORDER BY marks DESC LIMIT 3;

Aggregate Function:
-----------------
SELECT max(marks)FROM student;

SELECT avg(marks)FROM student;

SELECT min(marks)FROM student;

SELECT COUNT(name)FROM student;

SELECT marks FROM student;

Group BY Clause:
----------------
SELECT city,count(rollno)FROM student GROUP BY city;

SELECT city,name,count(rollno,name)FROM student GROUP BY city,name;

SELECT city,avg(marks)FROM student GROUP BY city;


SELECT grade ,count(rollno)
FROM student
GROUP BY grade
ORDER BY grade;


Practise Questions:
------------------
Que)Write the query to find avg marks in each city in ascending order

SELECT city,avg(marks)FROM student GROUP BY city ORDER BY avg(marks);

SELECT city,avg(marks)FROM student GROUP BY city ORDER BY avg(marks)DESC;

Que)for the given table find the total payment according to each payment method.

SELECT mode,count(customer)FROM payment GROUP BY mode

Having clause:
----------------
SELECT count(name),city from student GROUP BY city HAVING max(marks)>90;

General Order:
--------------
SELECT column(s)
FROM table_name
where condition
GROUP BY column(s)
HAVING condition
ORDER BY column(s) ASC;

SELECT city FROM student
where grade="A"
GROUP BY city
HAVING Max(marks)>80
ORDER BY city DESC;

Table Related Queries:
----------------------
UPDATE student SET grade="O"
where grade="A";

UPDATE student SET marks=82
where marks=50;

UPDATE student SET grade="F"
where marks>80;

UPDATE student SET grade="B"
where marks BETWEEN 80 AND 90;

UPDATE student SET marks=marks+1;

UPDATE student SET marks=12
where rollno=102;

DELETE FROM student WHERE marks<33;

Revisiting FK:
--------------
CREATE TABLE dept(id INT PRIMARY KEY,name VARCHAR(50));

CREATE TABLE teacher(
id INT PRIMARY KEY,
name VARCHAR(50),
dept_id INT,
FOREIGN KEY(dept_id)REFERENCES dept(id)
);

INSERT INTO dept(id,name)VALUES(101,"Karan");
INSERT INTO dept(id,name)VALUES(102,"Vishal");
INSERT INTO dept(id,name)VALUES(103,"Ashwini");

INSERT INTO teacher(id,name,dept_id)VALUES(1,"karan",102);
INSERT INTO teacher(id,name,dept_id)VALUES(2,"Ashwini",101);
INSERT INTO teacher(id,name,dept_id)VALUES(3,"Ashwini",103);

Cascading for FK:
-----------------
onDeleteCascade
onUpdateCascade

CREATE TABLE teacher(
id INT PRIMARY KEY,
name VARCHAR(50),
dept_id INT,
FOREIGN KEY(dept_id)REFERENCES dept(id)
ON UPDATE CASCADE
ON DELETE CASCADE
);

INSERT INTO dept VALUES(104,"english"),(105,"IT");

INSERT INTO teacher VALUES(101,"Adam",101),(102,"Eve",102);

UPDATE dept SET name="english" WHERE name="vaibhav";

Table Related Queries:
----------------------
alter:
======
ALTER TABLE student 
ADD COLUMN age INT NOT NULL DEFAULT 19;

ALTER TABLE student
DROP COLUMN age;

ALTER TABLE grade1
RENAME TO student;

ALTER TABLE student
MODIFY COLUMN age varchar(2);

INSERT INTO student
(rollno,name,marks,stu_age)
VALUES(108,"gargi",68,100);

ALTER TABLE student
CHANGE age stu_age INT;

ALTER TABLE student
DROP COLUMN stu_age;

ALTER TABLE student
RENAME TO stu;

TRUNCATE TABLE student;

Practise Questions:
-------------------
Que)Change the name of column name to full name.
ALTER TABLE student
CHANGE name full_name varchar(50);

Que)Delete all the student who scored marks less than 80
DELETE FROM student
WHERE marks<80;

Que)Delete the column for grade
ALTER TABLE student
DROP COLUMN grade;

Joins in SQL:
-------------

CREATE TABLE student(id INT PRIMARY KEY,name VARCHAR(50));
INSERT INTO student(id,name)VALUES(101,"adam"),(102,"bob"),(103,"casey");

CREATE TABLE course(id INT PRIMARY KEY,course VARCHAR(50));
INSERT INTO course(id,course)VALUES(102,"english"),(105,"math"),(103,"science"),(107,"computer science");

Inner join:
SELECT *FROM student as s INNER JOIN course as c
ON s.id=c.id;

Left join:
SELECT *FROM student as s LEFT JOIN course as c
ON s.id=c.id;

Right Join:
SELECT *FROM student as s RIGHT JOIN course as c
ON s.id=c.id;

full join:
SELECT *
FROM student as a 
LEFT JOIN course as b
ON a.id=b.id;
UNION
SELECT *
FROM student as a 
RIGHT JOIN course as b
ON a.id=b.id;

Think And Ans:
-------------
left Exclusive join:
SELECT *FROM student as a 
LEFT JOIN course as b 
ON a.id=b.id
WHERE b.id IS NULL;

right Exclusive join:
SELECT *FROM student as a 
RIGHT JOIN course as b 
ON a.id=b.id
WHERE a.id IS NULL;

Full Exclusive join:
SELECT * FROM student AS a
LEFT JOIN course AS b ON a.id = b.id
WHERE b.id IS NULL

UNION

SELECT * FROM student AS a
RIGHT JOIN course AS b ON a.id = b.id
WHERE a.id IS NULL;

Self join:
----------
CREATE TABLE employee(
id INT PRIMARY KEY,
name VARCHAR(100),
manager_id INT);

INSERT INTO employee(id,name,manager_id) VALUES(101,"adam",103),(102,"Hob",104),(103,"casey",NULL),(104,"donald",103);

SELECT a.name as manager_name,b.name
FROM employee as a 
JOIN employee as b
ON a.id=b.manager_id;
 
Union:
------
SELECT name FROM employee
UNION 
SELECT name FROM employee;

SELECT name FROM employee
UNION ALL
SELECT name FROM employee;


SQL Sub Queries:
-----------------
Que1):
----
CREATE TABLE student(
     rollno INT PRIMARY KEY,
     name VARCHAR(50),
     marks INT NOT NULL,
     grade VARCHAR(1),
     city VARCHAR(20));

INSERT INTO student(rollno,name,marks,grade,city)VALUES(101,"karan",78,"C","pune");
INSERT INTO student(rollno,name,marks,grade,city)VALUES(102,"Vishal",79,"B","Nagpur");
INSERT INTO student(rollno,name,marks,grade,city)VALUES(103,"Ashwini",80,"A","Nashik");
INSERT INTO student(rollno,name,marks,grade,city)VALUES(104,"Abhinav",85,"B","Karmala");
INSERT INTO student(rollno,name,marks,grade,city)VALUES(105,"Vaishali",96,"A","Delhi");
INSERT INTO student(rollno,name,marks,grade,city)VALUES(106,"Saurab",92,"F","Delhi");
INSERT INTO student(rollno,name,marks,grade,city)VALUES(107,"Pranjali",82,"G","Delhi");

SELECT AVG(marks)FROM student;

SELECT name,marks
FROM student
WHERE marks>73.5714;

Combine SubQuery Below:
=======================
SELECT name,marks
FROM student
WHERE marks>(SELECT AVG(marks)FROM student);

Que2):
------
SELECT rollno  
FROM student
WHERE rollno % 2=0;

SELECT name ,rollno
FROM student
WHERE rollno IN(102,104,106);

Combine SubQuery Below:
=======================
SELECT name ,rollno
FROM student
WHERE rollno IN(
SELECT rollno  
FROM student
WHERE rollno % 2=0;);

Que3):
------
Using subquery:

SELECT Max(marks)
FROM(SELECT *FROM student WHERE city="Delhi")As temp;

SQL query:

SELECT Max(marks) FROM student WHERE city="Delhi";


SQL SubQuery:
-------------
Example with SELECT:

SELECT(SELECT  Max(marks) FROM student),name FROM student;

SELECT(SELECT  marks FROM student),name FROM student;  
//This above query show follwing error:Subquery returns more than 1 row


MYSQL View:
-----------
CREATE VIEW view1 AS
SELECT rollno,name,marks
FROM student;

SELECT *FROM view1
WHERE marks>90;

DROP VIEW view1;

SELECT *FROM view1;		//show error























 

